[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=1.0.5"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
]

[tool.coverage.run]
omit = [
    "*/setup.py",
    "*/tests/*",
    "*/build/*",
    "*/dist/*",
    "*/.tox/*",
    "*/.egg/*",
]

[tool.isort]
force_sort_within_sections = false
known_first_party = "bugmon"
profile = "black"

[tool.poetry]
authors = ["pyoor <pyoor@users.noreply.github.com>"]
description = "Bugmon Taskcluster Implementation"
license = "MPL-2.0"
name = "bugmon-tc"
version = "2.1.2"

[tool.poetry.dependencies]
bugmon = {git = "https://github.com/MozillaSecurity/bugmon.git"}
python = "^3.7"
taskcluster = ">=30.0.0"

[tool.poetry.group.dev.dependencies]
black = "^22.10.0"
codecov = "^2.1.11"
coverage = { extras = ["toml"], version = "^5.1" }
flake8 = "^4.0.1"
flake8-isort = "^4.0.0"
flake8-quotes = "^3.3.1"
gitlint = "^0.17.0"
pre-commit = "^2.13.0"
pylint = "^2.4.4"
pytest = "^7.1.2"
pytest-black = "^0.3.8"
pytest-cov = "^3.0.0"
pytest-flake8 = "^1.1.1"
pytest-mock = "^3.0.0"
pytest-pylint = "^0.18.0"
taskcluster-yml-validator = "^0.0.9"
toml-sort = "^0.19.0"
tox = "^3.14.5"

[tool.poetry.scripts]
bugmon-monitor = 'bugmon_tc.monitor.cli:main'
bugmon-process = 'bugmon_tc.process.cli:main'
bugmon-report = 'bugmon_tc.report.cli:main'

[tool.pylint.format]
max-line-length = 88

[tool.pylint.messages_control]
disable = [
    "bad-continuation",
    "fixme",
    "invalid-name",
    "line-too-long",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "missing-module-docstring",
    "missing-return-doc",
    "missing-yield-doc",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-locals",
    "too-many-nested-blocks",
    "too-many-return-statements",
    "too-many-statements",
    "useless-object-inheritance"
]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.semantic_release]
build_command = "pip install poetry && poetry build"
commit_subject = "chore(release): {version} [skip ci]"
upload_to_pypi = false
upload_to_release = false
version_toml = "pyproject.toml:tool.poetry.version"
